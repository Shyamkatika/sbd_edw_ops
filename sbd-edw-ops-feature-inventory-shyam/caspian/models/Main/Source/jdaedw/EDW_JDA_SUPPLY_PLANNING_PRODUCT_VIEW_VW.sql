Select
CONCAT(coalesce(SKUDISPLAY.ITEM::varchar,''),'~',coalesce(SKUDISPLAY.LOC::varchar,'')) AS SUPPLY_PLNG_PROD_VW_KEY,
'JDAEDW' AS {{var('column_srcsyskey')}},
MD5(CONCAT(coalesce(SKUDISPLAY.ITEM::varchar,''),'~',coalesce(SKUDISPLAY.LOC::varchar,''))) AS {{var('column_rechashkey')}},
{{var('default_n')}} AS {{var('column_DEL_FROM_SRC_FLAG')}},
'{{model.name}}' AS {{var('column_ETL_INS_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_INS_DTE')}},
'{{model.name}}' AS {{var('column_ETL_UPD_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_UPD_DTE')}},
SKUDISPLAY.LOADDTS AS {{var('column_z3loddtm')}},
SKUDISPLAY.LOADDTS AS {{var('column_vereffdte')}},
'9999-12-31 00:00:00.000' AS {{var('column_verexpirydt')}},
{{var('default_y')}} AS {{var('column_currrecflag')}},
{{var('default_n')}} AS {{var('column_orprecflag')}},
SKUDISPLAY.BACKORDERQTY	AS BKORD_QTY,
case when length(trim(UPPER((SKUDISPLAY.ITEM)))) <1 then {{var('default_mapkey')}} when UPPER(SKUDISPLAY.ITEM)
IS NULL then {{var('default_mapkey')}} else UPPER(SKUDISPLAY.ITEM) end AS PROD_KEY,
SKUDISPLAY.U_ATP AS AVAIL_PROMISE_QTY,
SKUDISPLAY.U_BLOCKEDSTOCK AS BLKD_STK, 
SKUDISPLAY.U_CASEQTY AS CASE_QTY,
UPPER(SKUDISPLAY.U_FOLLOW_UP_MATERIAL) AS REPLCE_PROD_ID,
to_date(SKUDISPLAY.U_LASTSTOCKMOVE) AS LAST_MOVE_DTE,
SKUDISPLAY.U_LOCALCONTACT AS PLNR_CD_CNTCT_NAME,
SKUDISPLAY.U_MARKETPLANNERCODE AS MKT_PLNR, 
UPPER(SKUDISPLAY.U_MARKETSOURCE ) AS SUPPLY_SRC_LOC_ID,
UPPER(SKUDISPLAY.U_MASTERPACK ) AS UOM_ID,
SKUDISPLAY.U_MDD AS DYLY_DMD_AVG_QTY,
SKUDISPLAY.U_MFGPRDGRP AS PRODTN_GRP,
--try_to_date(SKUDISPLAY.U_NEW_TO_JDATEST_DATE) AS PROD_RELS_DTE, 

SKUDISPLAY.U_NEXTSCHEDFRZDUR AS NEXT_SCHED_FREEZE_DUR,
SKUDISPLAY.U_PENDINGINVADJUST AS PENDING_INVTY_ADJ,
SKUDISPLAY.U_PLANNERCOMMENT AS USER_PLNR_CMT_TEXT,
SKUDISPLAY.U_PLANTSTATUS AS PLANT_STAT,
(SKUDISPLAY.U_PLND_DELIVERY_TIME) AS PLND_DLV_TM,--mapping needs to check
SKUDISPLAY.U_PRODUCTHOLD AS QLTY_INSPCT_QTY,
SKUDISPLAY.U_REPLEN_INC_QTY AS INCREMENTAL_REPL_QTY,
SKUDISPLAY.U_REPLEN_MIN_QTY AS MIN_REPL_QTY,
SKUDISPLAY.U_S1R1_HORIZON AS S1R1,
SKUDISPLAY.U_SCHEDRCPTHRZN AS REQ_FREEZE_PERD,
SKUDISPLAY.U_SOS_COUNTRY AS CNTRY_OF_ORIG,
SKUDISPLAY.U_STDCOST AS STD_COST,
TO_TIMESTAMP_NTZ(SKUDISPLAY.U_ULTIMSOURCE_LT_SD) AS LEADTIME,--mapping needs to check
UPPER(SKUDISPLAY.U_ULTIMSOURCE_SD ) AS SRC_LOC_ID,
SKUDISPLAY.U_UNITSPERPALLET AS UNITS_PER_PAL_QTY,
SKUDISPLAY.U_VENDORCONINV AS CNSGN_INVTY_TEXT,
SKUDISPLAY.U_VENDORDESCR AS VEND_DESC,
SKUDISPLAY.U_VOL AS PROD_VOL,
SKUDISPLAY.U_WGT AS PROD_WGT,
SKUDISPLAY.VENDOR AS VEND_NBR,
SKUDISPLAY.ABBR AS SKU_ID_NBR,
SKUDISPLAY.AGRORI AS AGRT_GRS_REQ_QTY,
SKUDISPLAY.BUYER AS SKU_BUYER_NAME,
SKUDISPLAY.FAMILY AS SKU_FAMILY_CD_NBR,
SKUDISPLAY.ISSUE AS SKU_ISS_POLICY,
SKUDISPLAY.ITEMGROUP AS SKU_PROD_GRP,
SKUDISPLAY.LABHR AS LABR_HRS_NBR,
SKUDISPLAY.MTYPE AS SKU_PROD_TYP,
SKUDISPLAY.ONORDERQTY AS ACT_ON_ORD_QTY,
SKUDISPLAY.PLANNER AS SKU_CD_PLNR,
SKUDISPLAY.U_ABCCODE AS ABC_CD,
SKUDISPLAY.U_ADDS1R1 AS ADD_S1R1,
SKUDISPLAY.U_AUTOREPLENTYPE AS AUTO_REPLEN_TYP,
SKUDISPLAY.U_BOM_USAGE AS BOM_USAGE,
SKUDISPLAY.U_COUNTRY_ABCCODE AS CNTRY_ABC_CD,
SKUDISPLAY.U_CUSTHIER1 AS CUST_HIER_1,
SKUDISPLAY.U_CUSTHIER2 AS CUST_HIER_2,
SKUDISPLAY.U_CUSTHIER3 AS CUST_HIER_3,
SKUDISPLAY.U_CUSTHIER4 AS CUST_HIER_4,
SKUDISPLAY.U_CUSTITEM AS CUST_PROD,
CASE WHEN SKUDISPLAY.U_DELETEFLAG = '1' THEN 'Y' ELSE 'N' END AS DEL_FLAG,
SKUDISPLAY.U_DV_LEAD_TIME AS DV_LEADTIME,
SKUDISPLAY.U_ERPSTRATEGYGROUP AS ERP_STRAT_GRP,
CASE WHEN SKUDISPLAY.U_INTERCOONLYFLAG = '1' THEN 'Y' ELSE 'N' END AS INTER_CO_ONLY_FLAG,
SKUDISPLAY.U_IO_BATCH_PROFILE AS IO_BATCH_PRFL,
SKUDISPLAY.U_IO_DV_LEADTIME AS IO_DV_LEADTIME,
SKUDISPLAY.U_IO_OVRDWMAPE AS IO_OVRD_WMAPE,
SKUDISPLAY.U_IO_PLANNER_PROFILE AS IO_PLNR_PRFL,
SKUDISPLAY.U_IO_SEASONAL_SKU AS IO_SEASONAL_SKU,
SKUDISPLAY.U_IO_SKUCLASS AS IO_SKU_CLS,
SKUDISPLAY.U_IO_STRSW AS IO_STRSW,
SKUDISPLAY.U_IO_STRSW_OVR AS IO_STRSW_OVER,
SKUDISPLAY.U_KIT_INDICATOR AS KIT_INDCTR,
SKUDISPLAY.U_LIFECYCLE AS LIFE_CYCLE,
SKUDISPLAY.U_LOCATION_ABCCODE AS LOC_ABC_CD,
UPPER(SKUDISPLAY.U_LOTSIZEKEY ) AS LOT_SZ_CD,
SKUDISPLAY.U_LOTSIZEKEYDESCR AS LOT_SZ_KEY_DESC,
SKUDISPLAY.U_MAKEBUY_SD AS MAKE_BUY_SD,
SKUDISPLAY.U_MDD_COPY AS MDD_COPY,
SKUDISPLAY.U_MDD_UPD_RULE AS MDD_UPD_RULE,
SKUDISPLAY.U_MINSS_EQ_OH AS MINSS_EQ_OH,
SKUDISPLAY.U_MINSS_UPDT AS MINSS_UPD,
SKUDISPLAY.U_MINSSCOV AS MINSS_COV,
SKUDISPLAY.U_NEW_TO_JDA AS NEW_TO_JDA,
SKUDISPLAY.U_NEW_TO_PRD AS NEW_TO_PRODTN,
SKUDISPLAY.U_NEW_TO_SRC AS NEW_TO_SRC,
SKUDISPLAY.U_NEXTSCHEDSTEPDUR AS NEXT_SCHED_STEP_DUR,
SKUDISPLAY.U_OFFSET AS OFFSET,
SKUDISPLAY.U_PLANTCODE_SD AS PLANT_CD_SD,
SKUDISPLAY.U_PROCUREMENT_TYPE AS PROCUR_TYP,
SKUDISPLAY.U_PRODSTEPDAY AS PRODTN_STEP_DY,
SKUDISPLAY.U_PRODUCTSTATUS AS PROD_STAT,
SKUDISPLAY.U_REGION_ABCCODE AS REGN_ABC_CD,
SKUDISPLAY.U_REGIONAL_IND AS REGN_IND,
SKUDISPLAY.U_REPLENINC_INDICATOR AS REPLENINC_INDCTR,
SKUDISPLAY.U_REVFLOW AS REV_FLOW,
SKUDISPLAY.U_RSALLOCRULE AS RS_ALLOC_RULE,
SKUDISPLAY.U_SHIP_LOGIC AS SHIP_LOGIC,
UPPER(SKUDISPLAY.U_SKUINTERFACEKEY ) AS SKU_INTERFACE_ID,
SKUDISPLAY.U_SKUSTATUS AS SKU_STAT,
SKUDISPLAY.U_SOURCEPRIORITY AS SRC_PRYRT,
SKUDISPLAY.U_SS_TARGET_METHOD AS SS_TGT_MTHD,
SKUDISPLAY.U_SUPPLYSTRATEGY AS SUPPLY_STRAT,
SKUDISPLAY.U_SURPLUSCOVDUR AS SURPLUS_COVER_DUR,
SKUDISPLAY.U_UOM AS UOM,
SKUDISPLAY.U_UPDCUSDUR AS UPD_CUST_DUR,
SKUDISPLAY.U_VENDMFGLDTM AS VEND_MFG_LIMITED,
SKUDISPLAY.U_VENDORGLOBALCODE AS VEND_GLB_CD,
SKUDISPLAY.U_VOL_UOM AS VOL_UOM,
SKUDISPLAY.U_WGT_UOM AS WGT_UOM,
case when length(trim(UPPER((SKUDISPLAY.LOC )))) <1 then {{var('default_mapkey')}} when UPPER(SKUDISPLAY.LOC )
IS NULL then {{var('default_mapkey')}} else UPPER(SKUDISPLAY.LOC ) end AS LOC_KEY,
SKU.MPBATCHNUM AS BATCH_NBR,
SKU.ITEMSTOREGRADE AS SKU_STORE_GRADE, --NA is SF
SKU.REPLENMETHOD AS REPL_MTHD_TYP, --NA is SF
SKU.CREATIONDATE AS SKU_CREATE_DTE, --NA is SF
SKU.OHPOST AS LAST_ON_HAND_POST_DTE, 
SKU.NPITRANSDUR AS TRANSITION_PHASE_DUR_DY_CNT, --NA is SF
CASE WHEN SKU.STORABLESW = '1' THEN 'Y' ELSE 'N' END AS STORABLE_PROD_FLAG, 
SKU.OH AS ON_HAND_QTY ,
CASE WHEN SKU.NETCHGSW = '1' THEN 'Y' ELSE 'N' END AS NET_SKU_CHG_FLAG,
SKU.REPLENTYPE AS SKU_REPL_PLAN,
SKU.PLANLEVEL AS SKU_PLAN_LVL,
SKUDISPLAY.U_BOH_6MO_AVG AS BOH_6_MTHS_AVG, 
SKUDISPLAY.U_BOH_8WK_AVG AS BOH_8_WKS_AVG,
SKUDISPLAY.U_CURR_GSV AS CURR_GRS_SLS_VAL,
SKUDISPLAY.U_DEPROMO_6M_AVG AS REMOVING_PROMOS_6_MTHS_AVG,
SKUDISPLAY.U_DEPROMO_8W_AVG AS REMOVING_PROMOS_8_WKS_AVG,
SKUDISPLAY.U_DESCR AS LONG_DESC,
SKUDISPLAY.U_GSV_IN_USD AS GRS_SLS_VAL,
SKUDISPLAY.U_IO_DISC AS INVTY_OPTIMIZATION_DSCTU_DTE,
SKUDISPLAY.U_IO_GSV_DMD AS INVTY_OPTIMIZATION_GRS_SLS_VAL,
SKUDISPLAY.U_LTIMOPT_DAYS AS ULTM_SRC_LEADTIME_DUR,
SKUDISPLAY.U_POS_3WK_AVG AS HIST_3_WKS_POS_AVG,
SKUDISPLAY.U_POS_6MO_AVG AS HIST_6_MTHS_POS_AVG,
SKUDISPLAY.U_POS_8WK_AVG AS HIST_8_WKS_POS_AVG,
SKUDISPLAY.U_POS_FCST_6M_AVG AS FORCAST_6_MTHS_POS_AVG,
SKUDISPLAY.U_POS_FCST_8W_AVG AS FORCAST_8_WKS_POS_AVG,
SKUDISPLAY.U_POS_LATEST AS CURR_WK_POS_AVG,
SKUDISPLAY.U_CURR_PROJ_OOS_NAME AS PROD_OUT_OF_STK_DESC, --NA in SF
SKUDISPLAY.U_CURR_PROJ_OUTSTK_DT AS PROD_PROJECTED_OUT_OF_STK_DTE, --NA in SF
SKUDISPLAY.U_DISCO_REASON AS DISCONTINUATION_RESN, --NA in SF
SKUDISPLAY.U_INITIAL_PROJ_OUTSTK_DT AS PROD_INIT_OUT_OF_STK_DTE, --NA in SF
--UPPER(SKUDISPLAY.U_IO_SBU_LOC ) AS INVTY_SBU_LOC_ID, --NA in SF
--SKUDISPLAY.U_IO_STRSW_PREV AS PREV_IO_STRSW, --NA in SF
SKUDISPLAY.U_LOCAL_EMAIL AS LCL_PLNR_EMAIL, --NA in SF
SKUDISPLAY.U_MFGCELL AS MFG_CELL,
SKUDISPLAY.U_NOD_COMM_DISC_DATE AS NOTICE_OF_DISCONTINUATION_DTE, --NA in SF
SKUDISPLAY.U_PRIORPO AS PRIOR_PO,
SKUDISPLAY.U_PRODRATE AS PRODTN_RATE,
SKUDISPLAY.U_PULLDUR AS PROMO_PULL_DUR,
CASE WHEN SKUDISPLAY.U_SKU_ON_NOD_FILE = '1' THEN 'Y' ELSE 'N' END AS NOTICE_OF_DISCONTINUATION_FLAG, --NA in SF
CASE WHEN SKUDISPLAY.U_SKUFLAG = '1' THEN 'Y' ELSE 'N' END AS PROMO_FCST_INDCTR,
SKUDISPLAY.U_STP_ORD_DT AS NO_NEW_ARRIVE_DTE, --NA in SF
SKUDISPLAY.U_SUPPLY_OUT_DATE AS SUPPLY_OUT_DTE, --NA in SF
SKUDISPLAY.U_VMIPRICE AS VEND_MANAGED_INVTY_PRC,
--SKUDISPLAY.SEQ_INT_ENABLE_SW AS SEQ_ENABLE_FLAG, --NA in SF
--SKUDISPLAY.SOURCING_GROUP AS SOURCING_GRP, --NA in SF
--SKUDISPLAY.QTY_UOM AS UOM_QTY, --NA in SF
--SKUDISPLAY.STORABLE_SW AS STORABLE_SKU_INDCTR --NA in SF
SKUDISPLAY.SOURCESYS	as	SRC_SYS_NAME	,
SKUDISPLAY.U_BOH_LATEST	as	LATEST_BEG_ON_HAND_ID	,
SKUDISPLAY.U_NEW_TO_JDA_DATE	as	NEW_SKU_CREATE_DTE	,
SKUDISPLAY.U_EFF_OUT_DATE	as	DISCONTINUATION_EFF_DTE	,
CASE WHEN SKUDISPLAY.U_IO_WKLY_FLAG = '1' THEN 'Y' ELSE 'N' END AS WKLY_INVTY_OPTIMIZATION_FLAG,
SKUDISPLAY.U_FREEZE_DAYS	as	FUTR_DISCONTINUATION_FREEZE_DY	,
SKUDISPLAY.U_ITEM_LOC	as	PROD_AND_LOC_ID	,
SKU.SOURCINGGROUP	as	SKU_SOURCING_GRP_ID	,
SKU.QTYUOM	as	SKU_UOM_QTY	,
SKU.CURRENCYUOM	as	SKU_CRNCY_UOM_QTY	,
CASE WHEN SKU.ENABLESW = '1' THEN 'Y' ELSE 'N' END	as	SKU_OPTIMIZER_FLAG	,
SKU.TIMEUOM	as	SKU_UOM_TM_VAL	,
CASE WHEN SKU.INFCARRYFWDSW = '1' THEN 'Y' ELSE 'N' END	as	DMD_CARRY_FORWARD_FLAG	,
SKU.MINOHCOVRULE	as	SFTY_STK_DMD_TYP	,
SKU.LTDGROUP	as	SKU_LEADTIME_GRP_NAME	,
SKU.TARGETOHCOVRULE	as	TGT_ON_HAND_CVRG_TYP	,
CASE WHEN SKU.INFINITESUPPLYSW = '1' THEN 'Y' ELSE 'N' END	as	INFINITE_SUPPLY_SKU_FLAG	,
CASE WHEN SKU.SEQINTENABLESW = '1' THEN 'Y' ELSE 'N' END	as	SEQUENCING_INTEGRATION_ENABLE_FLAG	,
SKU.RPBATCHNUM	as	SKU_BATCH_NBR	,
SKU.SKUGROUP	as	SKU_GRP_ID	,
SKU.IOPLANPUBLISHDATE	as	SKU_PUBLISH_DTE	,
SKU.ENABLEOPT	as	RCRD_ENABLE_OPT	,
CASE WHEN SKU.U_IO_STRSW_PREV = '1' THEN 'Y' ELSE 'N' END	as	PREV_PROD_OPTIMIZATION_STORG_FLAG	,
  	SKUDISPLAY.U_LOC_XYZ as LOC_XYZ_CD,
    SKUDISPLAY.U_LOC_ABCXYZ as LOC_ABCXYZ_CD
FROM {{source('JDAEDW','SKUDISPLAY')}} SKUDISPLAY  
LEFT JOIN {{source('JDAEDW','SKU')}} SKU ON SKUDISPLAY.ITEM::varchar = SKU.ITEM::varchar and SKUDISPLAY.LOC::varchar = SKU.LOC::varchar 
