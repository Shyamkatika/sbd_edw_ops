WITH 

     LD_DET as (-- 25,484

 

     select  UPPER(TRIM(LD_SITE)) as LD_SITE
           , UPPER(TRIM(LD_PART)) as LD_PART
           , UPPER(TRIM(LD_LOC))  as LD_LOC
           , UPPER(TRIM(LD_LOT))  as LD_LOT
           , UPPER(TRIM(LD_REF))  as LD_REF
		   , LD_EXPIRE
           , UPPER(TRIM(LD_STATUS)) as LD_STATUS
           , LD_QTY_OH,LD_DOMAIN,LD_DATE
       from  "DEV_RAW"."EXCEL_QADDB"."VW_LD_DET"
  where UPPER(TRIM(LD_DOMAIN))='EXCEL'  and LD_QTY_OH<>0  --669,186
--    and UPPER(TRIM(LD_PART))='117478' and UPPER(TRIM(LD_SITE))='AA' and UPPER(TRIM(LD_LOC)) ='4FG02'

 

--       and UPPER(TRIM(LD_SITE))='BB' and UPPER(TRIM(LD_LOC)) ='P001'  and UPPER(TRIM(LD_PART))='601358'  
--       and LD_QTY_OH>0 
       order by 1,2,3,4,5
  ),

 

    IN_MSTR as (
 select distinct 
 IN_QTY_AVAIL    
,UPPER(IN_LOC) AS IN_LOC    
,IN_CUR_SET    
,IN_QTY_ALL    
--,IN_REC_DATE    
--,IN_QTY_AVAIL    
--,IN_GL_COST_SITE   
--,IN_CUR_SET    
--,IN_QTY_ALL    
--,IN_QTY_ORD   
,IN_MRP    
,IN_ISS_DATE    
,IN_REC_DATE    
,IN_QTY_OH    
,IN_QTY_REQ    
,IN_QTY_ORD    
,IN_SLS_CHG    
,IN_ISS_CHG    
--,IN_ISS_DATE    
--,IN_REC_DATE    
--,IN_CNT_DATE   
-- ,IN_AVG_ISS    
,IN_AVG_SLS    
,IN_AVG_DATE    
,IN_ROP    
,IN_QTY_NONET  
--,IN_MRP  
,IN_LEVEL  
--,IN_LOC  
,IN_PROJ_USE  
,IN_GRADE  
,IN_ASSAY  ,IN_ROLLUP  
--,IN_GL_COST_SITE  
,IN_CUST_CONSIGN_QTY 
,IN_SUPP_CONSIGN_QTY  
,IN_CNT_DATE  
,UPPER(IN_PART)  AS IN_PART
,UPPER(IN_SITE) AS IN_SITE
,IN_WH  
,LOADDTS,IN_ABC,IN_AVG_ISS

--,IN_LOC
     from  "DEV_RAW"."EXCEL_QADDB"."VW_IN_MSTR"
  where UPPER(TRIM(IN_DOMAIN))='EXCEL' 
      and IN_QTY_OH<>0
      order by 1, 2
--    and UPPER(TRIM(IN_PART))='117478' and UPPER(TRIM(IN_SITE))='AA' 
--      and UPPER(TRIM(IN_LOC))='4FG02'
  ), -- 1,309,228

 

 

  LAD_DET as (-- 1,078

 

        select DISTINCT  UPPER(TRIM(LAD_SITE)) as LAD_SITE
            , UPPER(TRIM(LAD_LOC))  as LAD_LOC
           , UPPER(TRIM(LAD_PART)) as LAD_PART
           , UPPER(TRIM(LAD_LOT))  as LAD_LOT
           , UPPER(TRIM(LAD_REF))  as LAD_REF 
           , LAD_NBR
           , LAD_LINE
           , UPPER(TRIM(LAD_DATASET))  as LAD_DATASET 
           , LAD_QTY_PICK,LAD_DOMAIN
--		   , LAD_PICK

 

    from "DEV_RAW"."EXCEL_QADDB"."LAD_DET"
  where UPPER(TRIM(LAD_DOMAIN))='EXCEL'

 

--    and UPPER(TRIM(LAD_DATASET)) ='SOD_DET'
--    and UPPER(TRIM(LAD_PART))='117478' and UPPER(TRIM(LAD_SITE))='AA' and UPPER(TRIM(LAD_LOC))='4FG02' 
--    and UPPER(TRIM(LAD_PART))='601358' and UPPER(TRIM(LAD_SITE))='BB' and UPPER(TRIM(LAD_LOC)) ='P001'
order by 1,2, 3, 4, 5
  ),

 

  TR_HIST as (---1,305,311 
select distinct
UPPER(TRIM(TR_SITE )) as  TR_SITE
,UPPER(TRIM(TR_LOC)) as TR_LOC
, UPPER(TRIM(TR_PART)) as TR_PART
, UPPER(TRIM(TR_LOT)) as TR_LOT  
, UPPER(TRIM(TR_REF)) as TR_REF
, TR_NBR    
, TR_LINE,TR_UM,TR_TYPE,TR_TRNBR,TR_CURR,TR_SHIP_DATE
,UPPER(TRIM(TR_SERIAL)) as TR_SERIAL
,TR_UM  as  PROD_UOM_TEXT
,TR_TYPE  as  TXN_TYP_LKEY
,TR_UM as INVTY_UOM_KEY
,TR_CURR as CRNCY_KEY
,TR_TRNBR as ENTR_NBR
,TR_TYPE as ENTR_TXN_TYP_LKEY
,TR_SHIP_DATE as DOC_CREATE_DTE
    , LOADDTS
from (SELECT * FROM "DEV_RAW"."EXCEL_QADDB"."VW_TR_HIST" QUALIFY ROW_NUMBER() OVER (PARTITION BY TR_SITE,TR_LOC,TR_PART,TR_REF
                                                               ORDER BY TR_SITE,TR_LOC,TR_PART,TR_REF,LOADDTS,TR_DATE,TR_TIME DESC) =1) --1,559 --22,476-- 1,305,396
where UPPER(TRIM(TR_DOMAIN))='EXCEL'
--     and UPPER(TRIM(TR_PART))='117478' and UPPER(TRIM(TR_SITE ))='AA' and UPPER(TRIM(TR_LOC))='4FG02'
    order by 1, 2, 3, 4, 5
  ),

 

  SOD_DET as (-- 24,864

 

select distinct 
UPPER(UPPER(SOD_SITE)) as SOD_SITE
,UPPER(UPPER(SOD_LOC)) as SOD_LOC
,UPPER(UPPER(SOD_PART)) as SOD_PART
,CAST(SOD_LINE as VARCHAR) as SOD_LINE
,UPPER(SOD_NBR) as SOD_NBR 
,SOD_LIST_PR  as  ORD_NET_PRC,SOD_LIST_PR
    ,SOD_QTY_PICK
    ,SOD_STD_COST
,SOD_STD_COST  as  ORD_GRS_PRC
from "DEV_RAW"."EXCEL_QADDB"."SOD_DET"
where UPPER(TRIM(SOD_DOMAIN))='EXCEL'
--    and UPPER(TRIM(SOD_PART))='117478' and UPPER(TRIM(SOD_LOC))='4FG02' and UPPER(TRIM(SOD_SITE))='AA';
order by 1,2,3,4 ),

 

 

PT_MSTR AS(
SELECT 
  UPPER(TRIM(PT_SITE)) as PT_SITE,
  UPPER(TRIM(PT_LOC)) as PT_LOC,
  UPPER(TRIM(PT_PART)) as PT_PART, 
  PT_DESC1,
PT_DESC2,
PT_GROUP,
PT_SNGL_LOT,
PT_PRICE,
PT_NET_WT_UM,
PT_PART_TYPE,
PT_PHANTOM,
PT_PROD_LINE,
PT_WKS_AVG,
PT_STATUS,
PT_CUM_LEAD,
  PT_UM,
PT_SIZE_UM,
PT_DRAW,
PT_LOC_TYPE,
  UPPER(TRIM(PT_DOMAIN)) as PT_DOMAIN,PT_PM_CODE

FROM  "DEV_RAW"."EXCEL_QADDB"."PT_MSTR"   ---LEFT JOIN   PT_MSTR ON  pt_mstr.pt_domain = "excel" AND 
where UPPER(TRIM(PT_DOMAIN))='EXCEL'
),

XXALT_MSTR AS(
SELECT upper(trim(xxalt_dataset)) AS XXALT_DATASET,
       upper(trim(xxalt_ref_table))AS XXALT_REF_TABLE,
    upper(trim(xxalt_ref_field)) AS XXALT_REF_FIELD,
   upper(trim(XXALT_DOMAIN)) AS XXALT_DOMAIN,
   XXALT_KEY
--  , XXALT_VALUE, XXALT_VLAUE
    from "DEV_RAW"."EXCEL_QADCUST"."XXALT_MSTR" where  upper(trim(XXALT_DOMAIN))='EXCEL' and  UPPER(TRIM(XXALT_MSTR.xxalt_dataset )) = 'PRODUCTHIERARCHY'
and UPPER(TRIM(XXALT_MSTR.xxalt_ref_table))= 'PT_MSTR'
and UPPER(TRIM(XXALT_MSTR.xxalt_ref_field))='PT_PART'

 

   ),

   LOC_MSTR as (

 

select  distinct UPPER(TRIM(LOC_SITE)) as LOC_SITE
,UPPER(TRIM(LOC_TYPE))  as  LOC_TYPE
,UPPER(TRIM(LOC_LOC))  as  LOC_LOC 
,UPPER(TRIM(LOC_DOMAIN)) as LOC_DOMAIN
from "DEV_RAW"."EXCEL_QADDB"."LOC_MSTR" --"TEST_RAW"."EXCEL_QADDB"."LOC_MSTR"
where UPPER(TRIM(LOC_DOMAIN))='EXCEL'),

 

PL_MSTR as (
select distinct 
  UPPER(TRIM(PL_PROD_LINE)) as PL_PROD_LINE
  ,UPPER(TRIM(PL_INV_ACCT )) as  PL_INV_ACCT
  from "DEV_RAW"."EXCEL_QADDB"."PL_MSTR" --"TEST_RAW"."EXCEL_QADDB"."PL_MSTR" 
where UPPER(TRIM(PL_DOMAIN))='EXCEL'
),

 

PS_MSTR as (
select 
UPPER(TRIM(PS_PAR)) as PS_PAR, 
UPPER(TRIM(PS_COMP)) as PS_COMP,
UPPER(TRIM(PS_REF)) as PS_REF,
PS_START,
PS_SCRP_PCT  as  MATL_SCRAP_PCT,PS_SCRP_PCT
from "DEV_RAW"."EXCEL_QADDB"."PS_MSTR" 
--"TEST_RAW"."EXCEL_QADDB"."PS_MSTR"
where UPPER(UPPER(PS_DOMAIN))='EXCEL'),
=======
    LD_DET as (
select DISTINCT  
    UPPER(TRIM(LD_SITE)) as LD_SITE
    , UPPER(TRIM(LD_PART)) as LD_PART
    , UPPER(TRIM(LD_LOC))  as LD_LOC
    , UPPER(TRIM(LD_LOT))  as LD_LOT
    , UPPER(TRIM(LD_REF))  as LD_REF
    , LD_DATE
    , UPPER(TRIM(LD_STATUS)) as LD_STATUS
    , LD_QTY_OH
    , LD_EXPIRE
    , LOADDTS  
    from {{source('EXCEL_QADDB','LD_DET')}}
    where UPPER(TRIM(LD_DOMAIN))='EXCEL'
  ),

IN_MSTR as (
select distinct 
    UPPER(TRIM(IN_SITE)) as IN_SITE,
    UPPER(TRIM(IN_LOC)) as IN_LOC,
    UPPER(TRIM(IN_PART)) as IN_PART, 
    IN_QTY_OH, 
    IN_MRP, 
    IN_ABC, 
    IN_CUR_SET    
    ,IN_QTY_ALL     
    ,IN_ISS_DATE    
    ,IN_REC_DATE    
    ,IN_QTY_REQ    
    ,IN_QTY_ORD 
    ,IN_QTY_AVAIL      
    ,IN_SLS_CHG    
    ,IN_ISS_CHG     
    ,IN_AVG_SLS    
    ,IN_AVG_DATE    
    ,IN_ROP    
    ,IN_QTY_NONET  
    ,IN_LEVEL   
    ,IN_PROJ_USE  
    ,IN_GRADE  
    ,IN_ASSAY  
    ,IN_ROLLUP  
    ,IN_CUST_CONSIGN_QTY 
    ,IN_SUPP_CONSIGN_QTY  
    ,IN_CNT_DATE  
    ,IN_WH 
    ,in_gl_cost_site
    ,IN_AVG_ISS
    from {{source('EXCEL_QADDB','IN_MSTR')}}
    where UPPER(TRIM(IN_DOMAIN))='EXCEL' 
    order by 1, 2
  ),

LAD_DET as (
 select DISTINCT  UPPER(TRIM(LAD_SITE)) as LAD_SITE
    , UPPER(TRIM(LAD_LOC))  as LAD_LOC
    , UPPER(TRIM(LAD_PART)) as LAD_PART
    , UPPER(TRIM(LAD_LOT))  as LAD_LOT
    , UPPER(TRIM(LAD_REF))  as LAD_REF 
    , UPPER(TRIM(LAD_DATASET))  as LAD_DATASET 
    , SUM(LAD_QTY_PICK) as LAD_QTY_PICK
    from {{source('EXCEL_QADDB','LAD_DET')}}
    where UPPER(TRIM(LAD_DOMAIN))='EXCEL' and UPPER(TRIM(LAD_DATASET)) ='SOD_DET'
    group by 1, 2,3,4,5,6
),

TR_HIST_MAX as ( 
select 
    UPPER(TRIM(TR_SITE )) as  TR_SITE_MAX
    ,UPPER(TRIM(TR_LOC)) as TR_LOC_MAX
    , UPPER(TRIM(TR_PART)) as TR_PART_MAX
    , MAX(UPPER(TRIM(TR_TRNBR))) as TR_TRNBR_MAX
    --, TR_PRICE  as TR_PRICE_MAX  
    --, MAX(LOADDTS) as LOADDTS_MAX    
    , MAX(TR_DATE ) as TR_DATE_MAX 
    ,MAX(TO_TIME(to_char(TR_TIME)))  as  TR_TIME_MAX
    from {{source('EXCEL_QADDB','TR_HIST')}}
    where UPPER(TRIM(TR_DOMAIN))='EXCEL' and TR_TYPE not in ( 'CST-ADJ' ,'CUM-RRES' )
    group by 1,2,3
),

TR_HIST as (
select distinct
    UPPER(TRIM(TR_SITE )) as  TR_SITE
    ,UPPER(TRIM(TR_LOC)) as TR_LOC
    , UPPER(TRIM(TR_PART)) as TR_PART
    , UPPER(TRIM(TR_LOT)) as TR_LOT  
    , UPPER(TRIM(TR_REF)) as TR_REF
    ,TR_DATE  
    ,TO_TIME(to_char(TR_TIME)) as TR_TIME
    , TR_TIME_MAX    
    ,TR_NBR    
    ,TR_LINE  
    ,UPPER(TRIM(TR_SERIAL)) as TR_SERIAL
    ,TR_UM  
    ,TR_TYPE  
    ,TR_CURR 
    ,TR_TRNBR 
    ,TR_SHIP_DATE 
    ,TR_PRICE
    from {{source('EXCEL_QADDB','TR_HIST')}} TR
      inner join TR_HIST_MAX TM
    on UPPER(TRIM(TR.TR_SITE))=TM.TR_SITE_MAX
    and UPPER(TRIM(TR.TR_LOC))=TM.TR_LOC_MAX
    and UPPER(TRIM(TR.TR_PART))=TM.TR_PART_MAX
    AND UPPER(TRIM(TR.TR_TRNBR)) = TM.TR_TRNBR_MAX 
    and TR.TR_DATE=TM.TR_DATE_MAX
    and UPPER(TRIM(TR_DOMAIN))='EXCEL'
    and TR_TYPE not in ( 'CST-ADJ' ,'CUM-RRES' )
    and  TO_TIME(to_char(TR.TR_TIME)) =TM.TR_TIME_MAX
),

PT_MSTR AS(
SELECT 
    UPPER(TRIM(PT_SITE)) as PT_SITE,
    UPPER(TRIM(PT_LOC)) as PT_LOC,
    UPPER(TRIM(PT_PART)) as PT_PART, 
    PT_DESC1,
    PT_DESC2,
    PT_GROUP,
    PT_SNGL_LOT,
    PT_PRICE,
    PT_NET_WT_UM,
    PT_PART_TYPE,
    PT_PHANTOM,
    PT_PROD_LINE,
    PT_WKS_AVG,
    PT_STATUS,
    PT_CUM_LEAD,
    PT_UM,
    PT_SIZE_UM,
    PT_DRAW,
    PT_LOC_TYPE,
    PT_PM_CODE,
    UPPER(TRIM(PT_DOMAIN)) as PT_DOMAIN
    from {{source('EXCEL_QADDB','PT_MSTR')}}
    where UPPER(TRIM(PT_DOMAIN))='EXCEL'
),


XXALT_MSTR AS(
SELECT 
    upper(trim(xxalt_dataset)) AS XXALT_DATASET,
    upper(trim(xxalt_ref_table))AS XXALT_REF_TABLE,
    upper(trim(xxalt_ref_field)) AS XXALT_REF_FIELD,
    upper(trim(XXALT_DOMAIN)) AS XXALT_DOMAIN,
    XXALT_KEY, XXALT_VALUE
    from {{source('EXCEL_QADCUST','XXALT_MSTR')}} where upper(trim(XXALT_DOMAIN))='EXCEL' and  UPPER(TRIM(xxalt_dataset )) = 'PRODUCTHIERARCHY'
    and UPPER(TRIM(xxalt_ref_table))= 'PT_MSTR'
    and UPPER(TRIM(xxalt_ref_field))='PT_PART'
),


 

PTP_DET as (
select distinct
UPPER(TRIM(PTP_PART)) as PTP_PART
,UPPER(TRIM(PTP_SITE)) as PTP_SITE
,PTP_ORD_QTY  
,PTP_VEND 
,CAST(PTP_MFG_LEAD AS TIMESTAMP_NTZ(9))  as  PTP_MFG_LEAD
,PTP_ROUTING  as  PTP_ROUTING
,PTP_DRAW
,PTP_ORD_MAX  
,PTP_ORD_MIN  
,PTP_ORD_PER,PTP_ORD_MULT
from "DEV_RAW"."EXCEL_QADDB"."PTP_DET" 
--"TEST_RAW"."EXCEL_QADDB"."PTP_DET" 
where UPPER(UPPER(PTP_DOMAIN))='EXCEL'),

 

AD_MSTR as (
select distinct
    UPPER (TRIM(AD_ADDR)) AS AD_ADDR, 
           UPPER (TRIM(AD_CTRY)) as AD_CTRY,
  AD_DOMAIN
from "DEV_RAW"."EXCEL_QADDB"."AD_MSTR" 
--"TEST_RAW"."EXCEL_QADDB"."AD_MSTR" 
where UPPER(TRIM(AD_DOMAIN))='EXCEL'),

 

PRH_HIST as(
select distinct
UPPER(PRH_PART) as PRH_PART
,UPPER(PRH_NBR)  as PRH_NBR
, CAST(PRH_LINE as VARCHAR) as PRH_LINE
,   PRH_PER_DATE
,   PRH_RCP_DATE
,CASE WHEN PRH_PER_DATE>PRH_RCP_DATE then 'Y' else 'N' end as  PROD_DLV_FLAG
from "DEV_RAW"."EXCEL_QADDB"."PRH_HIST"  --"TEST_RAW"."EXCEL_QADDB"."PRH_HIST"
where UPPER(PRH_DOMAIN)='EXCEL'),

 

SCT_DET as (
select distinct 
  UPPER(SCT_SITE) as SCT_SITE, 
  UPPER(SCT_PART) as SCT_PART,
  SCT_CST_TOT  as  PROD_COST_PRC
,SCT_CST_TOT  as  INVTY_PRC
,SCT_OVH_TL,SCT_LBR_LL  as  PROD_OVHD_COST
,SCT_CST_TOT  as  TOT_PROD_OWNERSHIP_COST_PRC
,SCT_CST_TOT  as  PROD_COST
,SCT_OVH_LL  as  FOH_COST
,SCT_CST_TOT  as  CURR_PROD_COST_LKEY,SCT_CST_TOT,SCT_LBR_LL,SCT_OVH_LL
from "DEV_RAW"."EXCEL_QADDB"."SCT_DET"
where UPPER(SCT_DOMAIN)='EXCEL' and UPPER(SCT_SIM) = 'CURRENT') ,

LOC_MSTR as (
select  distinct 
    UPPER(TRIM(LOC_SITE)) as LOC_SITE
    ,UPPER(TRIM(LOC_TYPE))  as  LOC_TYPE
    ,UPPER(TRIM(LOC_LOC))  as  LOC_LOC 
    ,UPPER(TRIM(LOC_DOMAIN)) as LOC_DOMAIN
    from {{source('EXCEL_QADDB','LOC_MSTR')}}
    where UPPER(TRIM(LOC_DOMAIN))='EXCEL'),

PL_MSTR as (
select distinct 
  UPPER(TRIM(PL_PROD_LINE)) as PL_PROD_LINE
  ,UPPER(TRIM(PL_INV_ACCT )) as  PL_INV_ACCT
  from {{source('EXCEL_QADDB','PL_MSTR')}}
    where UPPER(TRIM(PL_DOMAIN))='EXCEL'
),

PTP_DET as (
select distinct
    UPPER(TRIM(PTP_PART)) as PTP_PART
    ,UPPER(TRIM(PTP_SITE)) as PTP_SITE
    ,PTP_ORD_QTY  
    ,PTP_VEND 
    ,CAST(PTP_MFG_LEAD AS TIMESTAMP_NTZ(9))  as  PTP_MFG_LEAD
    ,PTP_ROUTING 
    ,PTP_DRAW
    ,PTP_ORD_MAX  
    ,PTP_ORD_MIN  
    ,PTP_ORD_PER  
    ,PTP_ORD_MULT  
    from {{source('EXCEL_QADDB','PTP_DET')}}
    where UPPER(UPPER(PTP_DOMAIN))='EXCEL'),

AD_MSTR as (
    select distinct
    UPPER (TRIM(AD_ADDR)) AS AD_ADDR, 
    UPPER (TRIM(AD_CTRY)) as AD_CTRY,
    AD_DOMAIN
    from {{source('EXCEL_QADDB','AD_MSTR')}}
    where UPPER(TRIM(AD_DOMAIN))='EXCEL'),

SCT_DET as (
select distinct 
    UPPER(SCT_SITE) as SCT_SITE, 
    UPPER(SCT_PART) as SCT_PART,
    SCT_CST_TOT  
    ,SCT_OVH_TL
    ,SCT_LBR_LL
    ,SCT_OVH_LL
    from {{source('EXCEL_QADDB','SCT_DET')}}
    where UPPER(SCT_DOMAIN)='EXCEL' and UPPER(SCT_SIM) = 'CURRENT'),

MAT as (
select   
    LD_SITE, LD_LOC, LD_PART,  LD_LOT, LD_REF, LD_STATUS, LD_DATE,LD_QTY_OH,LD_EXPIRE,
    IN_SITE, IN_LOC,  IN_PART, IN_QTY_OH, IN_MRP, IN_ABC, IN_CUR_SET, IN_QTY_ALL, IN_ISS_DATE, IN_REC_DATE, IN_QTY_REQ, IN_QTY_ORD,
    IN_QTY_AVAIL, IN_SLS_CHG, IN_ISS_CHG, IN_AVG_SLS, IN_AVG_DATE, IN_ROP, IN_QTY_NONET, IN_LEVEL, IN_PROJ_USE, IN_GRADE, IN_ASSAY, IN_ROLLUP,
    IN_CUST_CONSIGN_QTY, IN_SUPP_CONSIGN_QTY, IN_CNT_DATE, IN_WH,in_gl_cost_site, IN_AVG_ISS,
    AD_ADDR, AD_CTRY,
    LAD_SITE, LAD_LOC, LAD_PART,LAD_LOT,  LAD_REF, LAD_DATASET, LAD_QTY_PICK,
    TR_SITE, TR_LOC, TR_PART, TR_REF,TR_NBR, TR_LINE, TR_SERIAL,TR_UM, TR_TYPE, TR_CURR, TR_TRNBR,TR_SHIP_DATE, TR_PRICE,
    PTP_PART, PTP_SITE, PTP_ORD_QTY, PTP_VEND, PTP_MFG_LEAD, PTP_ROUTING, PTP_DRAW, PTP_ORD_MAX, PTP_ORD_MIN, PTP_ORD_PER, PTP_ORD_MULT,
    XXALT_VALUE,XXALT_DATASET,
    PT_SITE,PT_LOC, PT_PART,PT_DESC1,PT_DESC2,PT_GROUP, PT_SNGL_LOT,PT_PRICE,PT_NET_WT_UM,PT_PART_TYPE, PT_PHANTOM,
    PT_PROD_LINE, PT_WKS_AVG,PT_STATUS,PT_CUM_LEAD, PT_UM, PT_SIZE_UM, PT_DRAW, PT_LOC_TYPE, PT_PM_CODE,
    LOC_SITE, LOC_TYPE, LOC_LOC,
    PL_PROD_LINE, PL_INV_ACCT,
    SCT_SITE, SCT_PART,SCT_CST_TOT ,SCT_OVH_TL,SCT_LBR_LL,SCT_OVH_LL

from  LD_DET 
LEFT  JOIN IN_MSTR
on  LD_DET.LD_SITE=IN_MSTR.IN_SITE
and LD_DET.LD_PART=IN_MSTR.IN_PART

LEFT JOIN AD_MSTR 
on AD_MSTR.AD_ADDR= LD_DET.LD_SITE
    
LEFT JOIN  PTP_DET
on PTP_DET.PTP_PART = LD_DET.LD_PART
AND PTP_DET.PTP_SITE = LD_DET.LD_SITE

LEFT JOIN  LAD_DET
on  LAD_DET.LAD_SITE=LD_DET.LD_SITE
AND LAD_DET.LAD_LOC =LD_DET.LD_LOC
and LAD_DET.LAD_PART=LD_DET.LD_PART
AND LAD_DET.LAD_LOT =lD_DET.LD_LOT
AND LAD_DET.LAD_REF =LD_DET.LD_REF

LEFT JOIN TR_HIST
on  TR_HIST.TR_SITE = LD_DET.LD_SITE 
AND TR_HIST.TR_LOC  = LD_DET.LD_LOC
AND TR_HIST.TR_PART = LD_DET.LD_PART
AND TR_HIST.TR_SERIAL= LD_DET.LD_LOT
AND TR_HIST.TR_REF = LD_DET.LD_REF

MAT as (-- 1,323,891 LD_DET & IN_MSTR

 

select  *
--  IN_MSTR.IN_ABC
--  LD_SITE, LD_LOC, LD_PART,  LD_LOT, LD_REF, LD_STATUS, LD_DATE
--         , IN_PART, IN_SITE,  IN_QTY_OH, IN_MRP 
--         , AD_ADDR, AD_CTRY
--         , LAD_SITE, LAD_LOC, LAD_PART,LAD_LOT,  LAD_REF, LAD_NBR , LAD_LINE, LAD_DATASET, LAD_QTY_PICK 
--         , TR_SITE, TR_LOC, TR_PART,TR_REF,TR_NBR  , TR_LINE, TR_SERIAL
--         , PTP_PART, PTP_SITE, PTP_ORD_QTY, PTP_VEND, PTP_MFG_LEAD, PTP_ROUTING, PTP_DRAW, PTP_ORD_MAX, PTP_ORD_MIN, PTP_ORD_PER
--         , SOD_NBR ,SOD_QTY_PICK, SOD_STD_COST
----         , XXALT_VALUE
--  ,XXALT_DATASET
--         , PT_SITE,PT_LOC, PT_PART,PT_DESC1,PT_DESC2,PT_GROUP, PT_SNGL_LOT,PT_PRICE,PT_NET_WT_UM,PT_PART_TYPE, PT_PHANTOM,PT_PROD_LINE, PT_WKS_AVG,PT_STATUS
--         , PT_CUM_LEAD, PT_UM, PT_SIZE_UM, PT_DRAW, PT_LOC_TYPE
--         , LOC_SITE, LOC_TYPE, LOC_LOC
--         ,  PL_PROD_LINE, PL_INV_ACCT
--         , PS_PAR, PS_COMP, PS_REF, PS_START, MATL_SCRAP_PCT
--         , PRH_PART,PRH_NBR,PRH_LINE, PRH_PER_DATE, PRH_RCP_DATE,PROD_DLV_FLAG, SCT_DET.SCT_SITE

    from  LD_DET 
LEFT  JOIN IN_MSTR
on  UPPER(TRIM(LD_DET.LD_SITE))=UPPER(TRIM(IN_MSTR.IN_SITE))
--and LD_DET.LD_LOC=IN_MSTR.IN_LOC
    and UPPER(TRIM(LD_DET.LD_PART))=UPPER(TRIM(IN_MSTR.IN_PART)) --25354

    LEFT JOIN AD_MSTR 
    on UPPER(TRIM( AD_MSTR.AD_ADDR))= UPPER(TRIM(IN_MSTR.IN_SITE))

  LEFT JOIN  PTP_DET
  on UPPER(TRIM(PTP_DET.PTP_PART)) = UPPER(TRIM(IN_MSTR.IN_PART))
  AND UPPER(TRIM(PTP_DET.PTP_SITE)) = UPPER(TRIM(IN_MSTR.IN_SITE))
  AND IN_MSTR.IN_QTY_OH >0
--
-- 
--
LEFT JOIN  LAD_DET
  on  UPPER(TRIM(LAD_DET.LAD_SITE))=UPPER(TRIM(LD_DET.LD_SITE))
  AND UPPER(TRIM(LAD_DET.LAD_LOC)) =UPPER(TRIM(LD_DET.LD_LOC))
  and UPPER(TRIM(LAD_DET.LAD_PART))=UPPER(TRIM(LD_DET.LD_PART))
  AND UPPER(TRIM(LAD_DET.LAD_LOT)) =UPPER(TRIM(lD_DET.LD_LOT))
  AND UPPER(TRIM(LAD_DET.LAD_REF)) =UPPER(TRIM(LD_DET.LD_REF))
  and upper(trim(lad_det.lad_domain))=upper(trim(ld_det.ld_domain)) -- 24,483
--
-- 
--
LEFT JOIN TR_HIST
    on  UPPER(TRIM(TR_HIST.TR_SITE)) = UPPER(TRIM(LD_DET.LD_SITE)) 
    AND UPPER(TRIM(TR_HIST.TR_LOC))  = UPPER(TRIM(LD_DET.LD_LOC))
    AND UPPER(TRIM(TR_HIST.TR_PART)) = UPPER(TRIM(LD_DET.LD_PART))
    AND UPPER(TRIM(TR_HIST.TR_SERIAL))= UPPER(TRIM(LD_DET.LD_LOT))
    AND UPPER(TRIM(TR_HIST.TR_REF)) = UPPER(TRIM(LD_DET.LD_REF))

-- 
--
----    select * from LAD_DET
    left join SOD_DET 
    on UPPER(TRIM(SOD_DET.SOD_NBR))=UPPER(TRIM(LAD_DET.LAD_NBR))
    and UPPER(TRIM(SOD_DET.SOD_LINE)) = UPPER(TRIM(LAD_DET.LAD_LINE))
    AND UPPER(TRIM(LAD_DET.LAD_SITE))=  UPPER(TRIM(SOD_DET.SOD_SITE))
    AND UPPER(TRIM(LAD_DET.LAD_LOC))=   UPPER(TRIM(SOD_DET.SOD_LOC))   
    AND UPPER(TRIM(LAD_DET.LAD_PART)) = UPPER(TRIM(SOD_DET.SOD_PART)) AND UPPER(TRIM(LAD_DATASET)) ='SOD_DET'
--
-- 

   Left join PT_MSTR
    ON UPPER(TRIM(pt_mstr.pt_part)) = UPPER(TRIM(in_mstr.in_part))
    AND UPPER(TRIM(PT_DOMAIN))='EXCEL'
--
-- 
--
  LEFT JOIN XXALT_MSTR
    on  UPPER(TRIM(XXALT_MSTR.xxalt_key)) = UPPER(TRIM(pt_mstr.pt_part))
and upper(TRIM(XXALT_MSTR.XXALT_DOMAIN))='EXCEL'
--
    LEFT JOIN LOC_MSTR
on UPPER(TRIM(LOC_MSTR.LOC_SITE))=UPPER(TRIM(IN_MSTR.IN_SITE)) and UPPER(TRIM(LOC_MSTR.LOC_LOC))=UPPER(TRIM(IN_MSTR.IN_LOC)) 
--
  LEFT JOIN  PL_MSTR
   ON UPPER(TRIM(PL_MSTR.PL_PROD_LINE)) = UPPER(TRIM(PT_MSTR.PT_PROD_LINE))
--
--
    LEFT JOIN PS_MSTR 
  on UPPER(TRIM(PS_MSTR.PS_COMP))=UPPER(TRIM(PT_MSTR.PT_PART))
--  and UPPER(TRIM(TR_HIST.TR_TYPE)) in ('ISS-SO', 'ISS-PO', 'ISS-PRV')
--
--
    LEFT join PRH_HIST
  on   UPPER(TRIM(PRH_HIST.PRH_PART))=UPPER(TRIM(TR_HIST.TR_PART))
 and  UPPER(TRIM(PRH_HIST.PRH_NBR))=UPPER(TRIM(TR_HIST.TR_NBR))
 and UPPER(TRIM(PRH_HIST.PRH_LINE))=UPPER(TRIM(TR_HIST.TR_LINE))
--
--
    LEFT JOIN SCT_DET
on UPPER(TRIM(SCT_DET.SCT_SITE))=UPPER(TRIM(IN_MSTR.IN_SITE)) 
  and UPPER(TRIM(SCT_DET.SCT_PART))=UPPER(TRIM(IN_MSTR.IN_PART))
--
-- 

  )
--  SELECT distinct count(*) FROM MAT;
  , 
OUT AS(
  SELECT 
  UPPER(CONCAT(COALESCE(trim(mat.LD_LOC)::VARCHAR,''),'~',COALESCE(trim(mat.LD_PART)::VARCHAR,''),'~',COALESCE(trim(mat.LD_LOT)::VARCHAR,''),'~',COALESCE(trim(mat.LD_REF)::VARCHAR,''),
             '~',COALESCE(trim(mat.LD_SITE)::VARCHAR,''))) AS INVTY_ON_HAND_SNAPSHOT_KEY,
  MD5(UPPER(CONCAT(COALESCE(trim(mat.LD_LOC)::VARCHAR,''),'~',COALESCE(trim(mat.LD_PART)::VARCHAR,''),'~',COALESCE(trim(mat.LD_LOT)::VARCHAR,''),'~',COALESCE(trim(mat.LD_REF)::VARCHAR,''),
                 '~',COALESCE(trim(mat.LD_SITE)::VARCHAR,'')))) as RCRD_HASH_KEY
   ,'EXCEL_QADDB' AS SRC_SYS_KEY
 ,mat.LD_DATE as SRC_RCRD_CREATE_DTE --LD_LOC~LD_PART~LD_LOT~LD_REF~LD_SITE
   ,null as SRC_RCRD_CREATE_USERID  
 ,NULL AS SRC_RCRD_UPD_USERID
 ,'Y' AS  CURR_RCRD_FLAG
,'N' AS  ORP_RCRD_FLAG
 ,mat.LD_DATE as SRC_RCRD_UPD_DTE
,mat.LD_DATE as ZONE3_LOD_DTE
,mat.LD_DATE as EFF_DTE
 ,null as DEL_FROM_SRC_FLAG,
   'request' AS ETL_INS_PID,                                                                 
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS ETL_INS_DTE,                                                                              
'request' AS  ETL_UPD_PID,                                                                   
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS ETL_UPD_DTE,     
'9999-12-31 00:00:00.000'::TIMESTAMP_NTZ AS EXPR_DTE 
  ,mat.IN_ABC   as   ABC_CD_LKEY
,mat.PT_DESC1   as   INVTY_1_DESC
,mat.PT_DESC2   as   INVTY_2_DESC
,mat.PL_INV_ACCT   as   ACCT_NBR
,mat.PT_GROUP   as   PROD_GRP_LKEY
,mat.IN_QTY_AVAIL   as   AVAIL_INVTY_AMT
,mat.PT_PRICE   as   PROD_SELL_PRC
,mat.PT_NET_WT_UM   as   SLS_UOM_KEY
,mat.SCT_CST_TOT   as   PROD_COST_PRC
  ,mat.AD_CTRY   as   CNTRY_KEY
,mat.PL_PROD_LINE   as   PROD_FAMILY_LKEY
,mat.PT_PART_TYPE   as   PROD_TYP_LKEY
--,mat.PRH_PER_DATE,mat.PRH_RCP_DATE   as   PROD_DLV_FLAG
  ,mat.PT_PRICE   as   PROD_STD_PRC
,mat.PT_WKS_AVG   as   AVG_DLV_TM
,mat.PTP_ORD_QTY   as  LOT_SZ_NBR
,mat.PTP_VEND   as   VEND_NBR
,mat.LOC_TYPE   as   STORG_TYP_LKEY
,mat.SOD_LIST_PR   as   ORD_NET_PRC
,mat.SOD_STD_COST   as   ORD_GRS_PRC
,mat.TR_UM   as   PROD_UOM_TEXT
,mat.IN_LOC   as   STORE_LOC_KEY
,mat.IN_QTY_OH   as   PROD_VOL_1_VAL
,mat.SCT_CST_TOT   as   INVTY_PRC
,mat.LD_DATE   as   INVTY_CMPLT_DTE
--,mat.SCT_OVH_TL,mat.SCT_LBR_LL   as   PROD_OVHD_COST
,mat.PT_STATUS   as   PROD_DESIGNATED_FLAG
,mat.PT_CUM_LEAD   as   LEADTIME
,mat.PTP_MFG_LEAD   as   ADDTN_LEADTIME
,mat.SCT_CST_TOT   as   TOT_PROD_OWNERSHIP_COST_PRC
,mat.IN_CUR_SET   as   PROD_UNIT_COST_PRC
,mat.PT_PART_TYPE   as   PROCUR_TYP_LKEY
,mat.PTP_ORD_MULT   as   PROD_PUR_QTY
,mat.PS_SCRP_PCT   as   MATL_SCRAP_PCT
--,mat.PT_PART   as   DSCTU_PROD_KEY
,mat.PTP_ROUTING   as   PROD_RTG_AVAIL_FLAG
,mat.PT_DRAW   as   DRAWING_NBR
-- ,mat.PTP_DRAW   as   DRAWING_NBR
  ,mat.PTP_ORD_MAX   as   PROD_MAX_ORD_QTY
,mat.IN_QTY_ALL   as   PROD_ALLOC_QTY
,mat.IN_REC_DATE   as   PROD_RCV_DTE
,mat.LD_STATUS   as   INVTY_STAT_TYP
,mat.IN_QTY_AVAIL   as   PROD_ON_HAND_QTY
--,mat.IN_GL_COST_SET   as   GL_ACCT_NBR
,mat.IN_CUR_SET   as   PROD_UNIT_COST
,mat.SCT_CST_TOT   as   PROD_COST
--,mat.LAD_PICK   as   ASGN_PICK_QTY
,mat.PT_LOC_TYPE   as   LOC_TYP_LKEY
,mat.SCT_OVH_LL   as   FOH_COST
,mat.IN_QTY_ALL   as   ALLOC_ORD_QTY
,mat.TR_TYPE   as   TXN_TYP_LKEY
,mat.PTP_ORD_MIN   as   PROD_MIN_ORD_QTY
,mat.PTP_ORD_QTY   as   PROD_STD_ORD_QTY
,mat.IN_QTY_ORD   as   ALLOC_PROD_ORD_QTY
,mat.LD_PART   as   INVTY_PART_NBR
,mat.LD_QTY_OH   as   INVTY_ON_HAND_QTY
,mat.LD_EXPIRE   as   INVTY_EXTR_DTE
,mat.IN_MRP   as   INVTY_SCHED_FLAG
,mat.TR_UM   as   INVTY_UOM_KEY
,mat.IN_ISS_DATE   as   INVTY_ISS_DTE
,mat.IN_REC_DATE   as   INVTY_RCV_DTE
,mat.TR_CURR   as   CRNCY_KEY
,mat.IN_QTY_OH   as   PROD_NET_ON_HAND_QTY
,mat.IN_QTY_REQ   as   PROD_REQ_QTY
,mat.IN_QTY_ORD   as   PROD_ORD_QTY
,mat.IN_SLS_CHG   as   TOT_SLS_RCPT_AMT
,mat.IN_ISS_CHG   as   TOT_SLS_ISS_AMT
,mat.IN_ISS_DATE   as   LAST_STOCKROOM_ISS_DTE
,mat.IN_REC_DATE   as   LAST_STOCKROOM_RCPT_DTE
,mat.IN_CNT_DATE   as   CYCLE_CNT_DTE
,mat.IN_AVG_ISS   as   AVG_GOODS_ISS_PER_DY_CNT
,mat.IN_AVG_SLS   as   AVG_SLS_PER_DY_AMT
,mat.IN_AVG_DATE   as   SLS_AND_GOODS_ISS_CALC_DTE
,mat.IN_ROP   as   PROD_REORD_QTY
,mat.IN_QTY_NONET   as   PROD_NON_NETTABLE_ON_HAND_QTY
  ,mat.IN_MRP   as   MRP_PROC_FLAG
,mat.IN_LEVEL   as   INVTY_LVL_NBR
,mat.IN_LOC   as   PROD_DFLT_LOC_KEY
,mat.IN_PROJ_USE   as   ANTICIPATED_PROD_QTY
,mat.IN_GRADE   as   INVTY_GRADE_LKEY
,mat.IN_ASSAY   as   PROD_ASSAY_PCT
,mat.IN_ROLLUP   as   ROLL_FLAG
,mat.PT_STATUS   as   PROD_STAT_LKEY
--,mat.IN_GL_COST_SITE   as   GL_COST_CD_NBR
,mat.IN_CUST_CONSIGN_QTY   as   CUST_CNSGN_PROD_QTY
,mat.IN_SUPP_CONSIGN_QTY   as   SUPLR_CNSGN_PROD_QTY
,mat.IN_CNT_DATE   as   UNRSTR_USE_STK_LAST_CNT_DTE
,case when mat.LD_STATUS  not in ('FGOOD','GOOD') THEN mat.LD_STATUS END as  INVTY_RESTRCT_USE_STK_STAT_LKEY
,mat.LD_STATUS   as   INVTY_WHSE_USE_STK_STAT_LKEY
,case when mat.LD_STATUS  not in ('INSPECT') THEN mat.LD_STATUS END as  INVTY_QLTY_INSPCT_STK_STAT_LKEY  --ld_status = inspect
,case when mat.LD_STATUS  not in ('INSPECT') THEN mat.LD_STATUS END as INVTY_BLKD_STK_STAT_LKEY
,CASE WHEN mat.LD_STATUS  not in ('FGOOD','GOOD') then mat.ld_qty_oh end as BLKD_STK_QTY
,mat.LOC_LOC   as   SLOC_ID
,mat.IN_PART   as   PROD_KEY
-- ,mat.LD_STATUS   as   BLKD_STK_QTY
,mat.IN_SITE   as   LOC_KEY
,mat.IN_WH   as   PROD_EXPORT_STAT
,mat.TR_TRNBR   as   ENTR_NBR
,mat.TR_TYPE   as   ENTR_TXN_TYP_LKEY
,mat.AD_CTRY   as   CNTRY_CD
,mat.TR_SHIP_DATE   as   DOC_CREATE_DTE
,mat.PTP_ORD_PER   as   UOM_QTY
,mat.PT_UM   as   UOM_TYP_LKEY
,mat.LD_LOT   as   PROD_SERL_NBR
,mat.SCT_CST_TOT   as   CURR_PROD_COST_LKEY
,mat.TR_SITE   as   SUB_LOC_TYP
--,SCT_CST_TOT  as  CURR_PROD_COST_LKEY
,CASE WHEN PRH_PER_DATE>PRH_RCP_DATE then 'Y' else 'N' end as  PROD_DLV_FLAG
,case when UPPER(TRIM(mat.pt_pm_code)) ='P' then MAT.SCT_OVH_TL ELSE mat.SCT_LBR_LL END AS PROD_OVHD_COST
,case when upper(trim(mat.pt_status))='OB' then mat.pt_part else null end as DSCTU_PROD_KEY
   FROM MAT)
SELECT * FROM OUT
=======
Left join PT_MSTR
ON pt_mstr.pt_part = in_mstr.in_part
AND UPPER(TRIM(PT_DOMAIN))='EXCEL'

LEFT JOIN XXALT_MSTR
on  UPPER(XXALT_MSTR.xxalt_key) = pt_mstr.pt_part
and upper(XXALT_MSTR.XXALT_DOMAIN)='EXCEL'
   
LEFT JOIN LOC_MSTR
on LOC_MSTR.LOC_SITE=IN_MSTR.IN_SITE and LOC_MSTR.LOC_LOC=IN_MSTR.IN_LOC 
    
LEFT JOIN  PL_MSTR
ON PL_MSTR.PL_PROD_LINE = PT_MSTR.PT_PROD_LINE

LEFT JOIN SCT_DET
on SCT_SITE=IN_SITE and SCT_PART=IN_PART
),

MAP_OUT AS(
SELECT DISTINCT
    UPPER(CONCAT(COALESCE(trim(mat.LD_SITE)::VARCHAR,''), '~',COALESCE(trim(mat.LD_LOC)::VARCHAR,''),'~',COALESCE(trim(mat.LD_PART)::VARCHAR,''),'~',COALESCE(trim(mat.LD_LOT)::VARCHAR,''),'~',COALESCE(trim(mat.LD_REF)::VARCHAR,''),'~',COALESCE(trim(mat.LD_DATE)::VARCHAR,''), '~', COALESCE(trim(mat.TR_TRNBR)::VARCHAR,''))) AS INVTY_ON_HAND_SNAPSHOT_KEY
    ,'EXCEL_QADDB' AS SRC_SYS_KEY
    ,MD5(UPPER(CONCAT(COALESCE(trim(mat.LD_SITE)::VARCHAR,''), '~',COALESCE(trim(mat.LD_LOC)::VARCHAR,''),'~',COALESCE(trim(mat.LD_PART)::VARCHAR,''),'~',COALESCE(trim(mat.LD_LOT)::VARCHAR,''),'~',COALESCE(trim(mat.LD_REF)::VARCHAR,''),'~',COALESCE(trim(mat.LD_DATE)::VARCHAR,''), '~', COALESCE(trim(mat.TR_TRNBR)::VARCHAR,'')))) as RCRD_HASH_KEY
    ,mat.LD_DATE as SRC_RCRD_CREATE_DTE
    ,null as SRC_RCRD_CREATE_USERID  
    ,NULL AS SRC_RCRD_UPD_USERID
    ,'Y' AS  CURR_RCRD_FLAG
    ,'N' AS  ORP_RCRD_FLAG
    ,mat.LD_DATE as SRC_RCRD_UPD_DTE
    ,mat.LD_DATE as ZONE3_LOD_DTE
    ,mat.LD_DATE as EFF_DTE
    ,null as DEL_FROM_SRC_FLAG,
    'request' AS ETL_INS_PID,                                                                
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS ETL_INS_DTE,                                                                              
    'request' AS  ETL_UPD_PID,                                                                  
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS ETL_UPD_DTE,    
    '9999-12-31 00:00:00.000'::TIMESTAMP_NTZ AS EXPR_DTE
    ,mat.IN_ABC   as   ABC_CD_LKEY
    ,mat.PT_DESC1   as   INVTY_1_DESC
    ,mat.PT_DESC2   as   INVTY_2_DESC
    ,mat.PL_INV_ACCT   as   ACCT_NBR  --LDD
    ,mat.PT_GROUP   as   PROD_GRP_LKEY
    ,mat.LD_QTY_OH   as   AVAIL_INVTY_AMT-- LDD
    ,mat.PT_PRICE   as   PROD_SELL_PRC
    ,mat.PT_NET_WT_UM   as   SLS_UOM_KEY
    ,mat.SCT_CST_TOT   as   PROD_COST_PRC
    ,mat.AD_CTRY   as   CNTRY_KEY
    ,mat.PL_PROD_LINE   as   PROD_FAMILY_LKEY
    ,mat.PT_PART_TYPE   as   PROD_TYP_LKEY
    ,mat.PT_PRICE   as   PROD_STD_PRC
    ,mat.PT_WKS_AVG::TIMESTAMP_NTZ   as   AVG_DLV_TM
    ,mat.PTP_ORD_QTY   as  LOT_SZ_NBR
    ,mat.PTP_VEND   as   VEND_NBR
    ,mat.LOC_TYPE   as   STORG_TYP_LKEY
    ,mat.TR_PRICE   as   ORD_NET_PRC
    ,mat.SCT_CST_TOT   as   ORD_GRS_PRC
    ,mat.TR_UM   as   PROD_UOM_TEXT
    ,mat.IN_LOC   as   STORE_LOC_KEY
    ,mat.LD_QTY_OH   as   PROD_VOL_1_VAL --LDD
    ,mat.SCT_CST_TOT   as   INVTY_PRC
    ,mat.LD_DATE   as   INVTY_CMPLT_DTE
    --,mat.PT_STATUS   as   PROD_DESIGNATED_FLAG
    ,CASE WHEN (UPPER(TRIM(mat.PT_STATUS)) IS NULL OR UPPER(TRIM(mat.PT_STATUS)) = '') THEN 'U' ELSE 'Y' END AS PROD_DESIGNATED_FLAG
    ,mat.PT_CUM_LEAD::TIMESTAMP_NTZ   as   LEADTIME
    ,mat.PTP_MFG_LEAD::TIMESTAMP_NTZ   as   ADDTN_LEADTIME
    ,mat.SCT_CST_TOT   as   TOT_PROD_OWNERSHIP_COST_PRC
    --,mat.IN_CUR_SET   as   PROD_UNIT_COST_PRC
    ,CASE WHEN IN_CUR_SET = '' THEN  0 ELSE 0 END AS PROD_UNIT_COST_PRC
    ,mat.PT_PART_TYPE   as   PROCUR_TYP_LKEY
    ,mat.PTP_ORD_MULT   as   PROD_PUR_QTY
    ,0   as   MATL_SCRAP_PCT
    --,mat.PTP_ROUTING   as  PROD_RTG_AVAIL_FLAG
    ,CASE WHEN (UPPER(TRIM(PTP_ROUTING)) IS NULL OR UPPER(TRIM(PTP_ROUTING)) = '') THEN 'U'
    WHEN UPPER(TRIM(PTP_ROUTING)) = '0' THEN 'N'
     ELSE 'Y' END AS PROD_RTG_AVAIL_FLAG
    ,mat.PT_DRAW   as   DRAWING_NBR
    ,mat.PTP_ORD_MAX   as   PROD_MAX_ORD_QTY
    ,mat.IN_QTY_ALL   as   PROD_ALLOC_QTY
    ,mat.IN_REC_DATE   as   PROD_RCV_DTE
    ,mat.LD_STATUS   as   INVTY_STAT_TYP
    ,mat.LD_QTY_OH   as   PROD_ON_HAND_QTY  --LDD
    --,mat.IN_CUR_SET   as   PROD_UNIT_COST
    , CASE WHEN mat.IN_CUR_SET = '' THEN  0 ELSE 0 END AS PROD_UNIT_COST
    ,mat.SCT_CST_TOT   as   PROD_COST
    ,mat.PT_LOC_TYPE   as   LOC_TYP_LKEY
    ,mat.SCT_OVH_LL   as   FOH_COST
    ,mat.LD_QTY_OH   as   ALLOC_ORD_QTY   --LDD
    ,mat.TR_TYPE   as   TXN_TYP_LKEY
    ,mat.PTP_ORD_MIN   as   PROD_MIN_ORD_QTY
    ,mat.PTP_ORD_QTY   as   PROD_STD_ORD_QTY
    ,mat.IN_QTY_ORD   as   ALLOC_PROD_ORD_QTY --INM
    ,mat.LD_PART   as   INVTY_PART_NBR
    ,mat.LD_QTY_OH   as   INVTY_ON_HAND_QTY
    ,mat.LD_EXPIRE   as   INVTY_EXTR_DTE
    --,mat.IN_MRP   as   INVTY_SCHED_FLAG
    ,CASE WHEN (UPPER(TRIM(mat.IN_MRP)) = 'TRUE') THEN 'Y' WHEN UPPER(TRIM(mat.IN_MRP)) = 'FALSE' THEN 'N' ELSE 'U' END AS INVTY_SCHED_FLAG
    ,mat.TR_UM   as   INVTY_UOM_KEY
    ,mat.IN_ISS_DATE   as   INVTY_ISS_DTE
    ,mat.IN_REC_DATE   as   INVTY_RCV_DTE
    ,mat.TR_CURR   as   CRNCY_KEY
    ,mat.LD_QTY_OH   as   PROD_NET_ON_HAND_QTY  --LDD
    ,mat.IN_QTY_REQ   as   PROD_REQ_QTY  --INM
    ,mat.IN_QTY_ORD   as   PROD_ORD_QTY --INM
    ,mat.IN_SLS_CHG   as   TOT_SLS_RCPT_AMT
    ,mat.IN_ISS_CHG   as   TOT_SLS_ISS_AMT
    ,mat.IN_ISS_DATE   as   LAST_STOCKROOM_ISS_DTE
    ,mat.IN_REC_DATE   as   LAST_STOCKROOM_RCPT_DTE
    ,mat.IN_CNT_DATE   as   CYCLE_CNT_DTE
    ,mat.IN_AVG_ISS   as   AVG_GOODS_ISS_PER_DY_CNT
    ,mat.IN_AVG_SLS   as   AVG_SLS_PER_DY_AMT
    ,mat.IN_AVG_DATE   as   SLS_AND_GOODS_ISS_CALC_DTE
    ,mat.IN_ROP   as   PROD_REORD_QTY
    ,mat.IN_QTY_NONET   as   PROD_NON_NETTABLE_ON_HAND_QTY --INM
    ,mat.LAD_QTY_PICK as ASGN_PICK_QTY
    --,mat.IN_MRP   as   MRP_PROC_FLAG
    ,CASE WHEN (UPPER(TRIM(mat.IN_MRP)) = 'TRUE') THEN 'Y' WHEN UPPER(TRIM(mat.IN_MRP)) = 'FALSE' THEN 'N' ELSE 'U' END AS MRP_PROC_FLAG
    ,mat.IN_LEVEL   as   INVTY_LVL_NBR
    ,mat.IN_LOC   as   PROD_DFLT_LOC_KEY
    ,mat.IN_PROJ_USE   as   ANTICIPATED_PROD_QTY
    ,mat.IN_GRADE   as   INVTY_GRADE_LKEY
    ,mat.IN_ASSAY   as   PROD_ASSAY_PCT
    --,mat.IN_ROLLUP   as   ROLL_FLAG
    ,CASE WHEN (UPPER(TRIM(mat.IN_ROLLUP)) IS NULL OR UPPER(TRIM(mat.IN_ROLLUP)) = '') THEN 'U'
           WHEN UPPER(TRIM(mat.IN_ROLLUP)) = 'FALSE' THEN 'N' ELSE 'Y' END AS ROLL_FLAG
    ,mat.PT_STATUS   as   PROD_STAT_LKEY
    ,mat.IN_CUST_CONSIGN_QTY   as   CUST_CNSGN_PROD_QTY
    ,mat.IN_SUPP_CONSIGN_QTY   as   SUPLR_CNSGN_PROD_QTY
    ,mat.IN_CNT_DATE   as   UNRSTR_USE_STK_LAST_CNT_DTE
    ,case when mat.LD_STATUS  not in ('FGOOD','GOOD') THEN mat.LD_STATUS END as  INVTY_RESTRCT_USE_STK_STAT_LKEY
    ,mat.LD_STATUS   as   INVTY_WHSE_USE_STK_STAT_LKEY
    ,case when mat.LD_STATUS  not in ('INSPECT') THEN mat.LD_STATUS END as  INVTY_QLTY_INSPCT_STK_STAT_LKEY
    ,case when mat.LD_STATUS  not in ('INSPECT') THEN mat.LD_STATUS END as INVTY_BLKD_STK_STAT_LKEY
    ,CASE WHEN mat.LD_STATUS  not in ('FGOOD','GOOD') then mat.ld_qty_oh end as BLKD_STK_QTY
    ,mat.LOC_LOC   as   SLOC_ID
    ,mat.IN_PART   as   PROD_KEY
    ,mat.IN_SITE   as   LOC_KEY
    ,mat.IN_WH   as   PROD_EXPORT_STAT
    ,mat.TR_TYPE   as   ENTR_TXN_TYP_LKEY
    ,mat.AD_CTRY   as   CNTRY_CD
    ,mat.TR_SHIP_DATE   as   DOC_CREATE_DTE
    ,mat.PTP_ORD_PER   as   UOM_QTY
    ,mat.PT_UM   as   UOM_TYP_LKEY
    ,mat.LD_LOT   as   PROD_SERL_NBR
    ,mat.SCT_CST_TOT   as   CURR_PROD_COST_LKEY
    ,SUBSTRING(mat.xxalt_value, 8, 3) AS PROD_CTGY_LKEY
    ,mat.IN_GL_COST_SITE as GL_COST_CD_NBR
    ,mat.TR_TRNBR as ENTR_NBR
    ,mat.TR_SITE   as   SUB_LOC_TYP
    --,SCT_CST_TOT  as  CURR_PROD_COST_LKEY
    ,'U' PROD_DLV_FLAG
    ,case when UPPER(TRIM(mat.pt_pm_code)) ='P' then MAT.SCT_OVH_TL ELSE mat.SCT_LBR_LL END AS PROD_OVHD_COST
    ,case when upper(trim(mat.pt_status))='OB' then mat.pt_part else null end as DSCTU_PROD_KEY
    FROM MAT)
  
select distinct * from  MAP_OUT

