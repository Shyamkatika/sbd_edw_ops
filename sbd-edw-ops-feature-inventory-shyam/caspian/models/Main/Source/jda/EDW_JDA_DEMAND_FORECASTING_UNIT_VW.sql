SELECT 

UPPER(CONCAT(coalesce(DFU.DMDUNIT::varchar,''),'~',coalesce(DFU.DMDGROUP::varchar,''),'~',coalesce(DFU.LOC::varchar,''),'~',coalesce(DFU.MODEL::varchar,''))) AS DMD_FORCAST_UNIT_KEY,

'JDA' AS {{var('column_srcsyskey')}},
MD5(UPPER(CONCAT(coalesce(DFU.DMDUNIT::varchar,''),'~',coalesce(DFU.DMDGROUP::varchar,''),'~',coalesce(DFU.LOC::varchar,''),'~',coalesce(DFU.MODEL::varchar,'')))) AS {{var('column_redhashkey')}},
{{var('default_n')}} AS {{var('column_delfromsrcflag')}},
'{{model.name}}' AS {{var('column_ETL_INS_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_INS_DTE')}},
'{{model.name}}' AS {{var('column_ETL_UPD_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_UPD_DTE')}},
DFU.LOADDTS AS {{var('column_z3loddtm')}},
DFU.LOADDTS AS {{var('column_vereffdte')}},
'9999-12-31 00:00:00.000' AS {{var('column_verexpirydt')}},
{{var('default_y')}} AS {{var('column_currrecflag')}},
{{var('default_n')}} AS {{var('column_orprecflag')}},

case when length(trim(UPPER((DFUVIEW.DMDUNIT)))) <1 then {{var('default_mapkey')}} when UPPER(DFUVIEW.DMDUNIT) IS NULL 
then {{var('default_mapkey')}} else UPPER(DFUVIEW.DMDUNIT) end AS DMD_UNIT_KEY,

case when length(trim(UPPER((DFU.LOC)))) <1 then {{var('default_mapkey')}} when UPPER(DFU.LOC) IS NULL 
then {{var('default_mapkey')}} else UPPER(DFU.LOC) end AS LOC_KEY,

DFU.HISTSTART AS HIST_START_DTE,
TO_TIMESTAMP(DFU.EFF) AS DFU_EFF_START_DTE,
TO_TIMESTAMP(DFU.DISC) AS DFU_DSCTU_DTE,
TO_TIMESTAMP(DFU.DMDPOSTDATE) AS DMD_POST_DTE,
TO_TIMESTAMP(DFU.MODELDATE) AS MODEL_RUN_DTE,
TO_TIMESTAMP(DFU.PUBLISHDATE) AS FCST_PUBLISHED_DTE,
TO_TIMESTAMP(DFU.ADJDMDPOSTDATE) AS ADJ_DMD_POST_DTE,
DFU.DMDGROUP AS DMD_GRP,
TO_TIMESTAMP(DFU.REFITDATE) AS MODEL_REFIT_DTE,
TO_TIMESTAMP(DFU.U_DFU_BORN) AS DFU_FIRST_CREATE_DTE,
DFU.SYMMETRICMAPE AS MEAN_ABSOLUTE_ERR_PCT,
DFU.STATMSE AS STATS_MODEL_ACCURACY_VAL,
DFU.INITE3ERROR AS INIT_E3_ERR_VAL,
DFU.E3ERROR AS FINAL_E3_ERR_VAL,
CASE WHEN DFU.U_DFU_ON_NOD_FILE='1' THEN 'Y' ELSE 'N' END as DFU_DISCONTINUATION_NOTICE_FLAG,
TO_TIMESTAMP(DFU.U_NOD_DISC_DATE) AS DISCONTINUATION_NOTICE_DTE,
TO_TIMESTAMP(DFU.U_INITIAL_PROJ_OUTSTK_DT) AS INIT_OUT_OF_STK_DTE,
TO_TIMESTAMP(DFU.U_CURR_PROJ_OUTSTK_DT) AS CURR_OUT_OF_STK_DTE,
CASE WHEN DFU.U_DMDPLNR_OOS_APPROVE='1' THEN 'Y' ELSE 'N' END as DFU_DISC_DTE_APRV_FLAG,
DFU.U_SKU_LIFECYCLE AS SKU_LFCYL,
DFU.U_MARKETPLANNERCODE AS SKU_MKT_PLNR_CD,
DFUVIEW.U_SKUABC AS ABC_CLS_CD,
DFUVIEW.U_DV_STDCOST AS SKU_STD_COST,
DFUVIEW.U_AVGBW AS AVG_SHIP_COST,
DFUVIEW.U_MINPRICE AS MIN_PRC,
TO_TIMESTAMP(DFUVIEW.U_DV_BORN) AS DFU_CREATE_DTE,
TO_TIMESTAMP(DFUVIEW.U_LAUNCH) AS DFU_LAUNCH_DTE,
TO_TIMESTAMP(DFUVIEW.U_LOST_DATE) AS PROD_LAST_SELL_DTE,
DFUVIEW.U_DFUCREATION AS FIRST_ENTR_PRC,
DFUVIEW.U_DMDTODATE AS DMD_TO_DTE,
TO_TIMESTAMP(DFUVIEW.U_EFFOUTDATE) AS RELS_EFF_DTE,
DFUVIEW.U_DV_SUPPLYSTRATEGY AS SUPPLY_PLNG_STRAT_DESC,
DFUVIEW.U_DC_SPLIT AS SPLIT_BTWN_LOC_PCT,
DFUVIEW.U_DV_LEAD_TIME AS DFU_LEADTIME_MTH_CNT,
DFUVIEW.U_POS_3WK_AVG AS HIST_3_WKS_POS_AVG,
DFUVIEW.U_POS_6MO_AVG AS HIST_6_MTHS_POS_AVG,
DFUVIEW.U_POS_8WK_AVG AS HIST_8_WKS_POS_AVG,
DFUVIEW.U_POS_FCST_6M_AVG AS FORCAST_6_MTHS_POS_AVG,
DFUVIEW.U_POS_FCST_8W_AVG AS FORCAST_8_WKS_POS_AVG,
DFUVIEW.U_POS_LATEST AS CURR_WK_POS_AVG,
DFUVIEW.U_DV_LEAD_TIME_DAYS AS DFU_LEADTIME_DY_CNT,
DFUVIEW.U_DV_LEAD_TIME_WEEKS AS DFU_LEADTIME_WK_CNT,
DFUVIEW.U_12MTHBASEHIST AS TWELVE_MTHS_ROLLING_HIST_CNT,
DFUVIEW.U_12MTHRRFCST AS TWELVE_MTHS_ROLLING_FCST_CNT,
DFUVIEW.U_NOTES AS OPN_NOTES_TEXT,
DFUVIEW.U_PLNR_FIELD AS OPN_FIELD_PLANNERS_TEXT,
DFUVIEW.U_BOH_LATEST AS DMD_BOH_CNT,
DFUVIEW.U_DV_S1R1_HORIZON AS PLNG_HORIZON_DY_CNT,
DFUVIEW.U_BOH_6MO_AVG AS BOH_6_MTHS_AVG,
DFUVIEW.U_BOH_8WK_AVG AS BOH_8_WKS_AVG,
DFUVIEW.U_06MTHBASEHIST AS SIX_MTHS_ROLLING_HIST_CNT,
DFUVIEW.U_FOLLOWUPMAT AS FOLLOW_UP_MTHD_NAME,
DFUVIEW.U_PLANTMATSTATUS AS PLNG_STAT,
DFUVIEW.U_DMDPLNR AS DMD_PLNR_USER,
DFUVIEW.U_DV_LVL AS DFU_LVL,
DFUVIEW.U_FCST_LVL AS FORECASTING_LVL,
DFUVIEW.U_POS_REPLEN AS DFU_POS_PLNR,
DFUVIEW.U_SPLIT_OVRD AS DC_SPLIT_OVRD,
DFUVIEW.U_DC_SPLIT AS DC_SPLIT,
DFUVIEW.U_SPLIT_LOGIC AS DC_SPLIT_LOGIC,
DFUVIEW.PRICEPROFILENAME AS PRC_PRFL_NAME,
DFUVIEW.U_DEPROMO_6M_AVG AS REMOVING_PROMOS_6_MTHS_AVG,
DFUVIEW.U_DEPROMO_8W_AVG AS REMOVING_PROMOS_8_WKS_AVG,
MODEL.MODEL AS MODEL_TYP,
MODEL.DESCR AS HIST_STREAM_DESC,
MODEL.HISTSTREAM AS HIST_STREAM,
MODEL.ALGORITHM AS MODEL_PROC_ALGORITHM



FROM {{source('JDA', 'DFU')}} DFU
LEFT JOIN  {{source('JDA', 'DFUVIEW')}} DFUVIEW ON DFUVIEW.DMDUNIT = DFU.DMDUNIT and  DFUVIEW.DMDGROUP = DFU.DMDGROUP and DFUVIEW.LOC = DFU.LOC
LEFT JOIN  {{source('JDA', 'MODEL')}} MODEL ON MODEL.MODEL = DFU.MODEL



