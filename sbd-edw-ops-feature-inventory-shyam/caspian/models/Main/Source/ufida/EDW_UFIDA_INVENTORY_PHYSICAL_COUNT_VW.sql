SELECT
UPPER(CHECKVOUCHS.autoID) as PHY_INVTY_KEY,
'UFIDA' AS {{var('column_srcsyskey')}},
MD5(UPPER(CHECKVOUCHS.autoID)) AS {{var('column_rechashkey')}},
{{var('default_n')}} AS {{var('column_DEL_FROM_SRC_FLAG')}},
'{{model.name}}' AS {{var('column_ETL_INS_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_INS_DTE')}},
'{{model.name}}' AS {{var('column_ETL_UPD_PID')}},
CURRENT_TIMESTAMP::TIMESTAMP_NTZ AS {{var('column_ETL_UPD_DTE')}},
CHECKVOUCHS.LOADDTS AS {{var('column_z3loddtm')}},
CHECKVOUCHS.LOADDTS AS {{var('column_vereffdte')}},
'9999-12-31 00:00:00.000' AS {{var('column_verexpirydt')}},
{{var('default_y')}} AS {{var('column_currrecflag')}},
{{var('default_n')}} AS {{var('column_orprecflag')}},
case when length(trim(CHECKVOUCHS.cCVReason))<1 then {{var('default_mapkey')}} when CHECKVOUCHS.cCVReason IS NULL then  {{var('default_mapkey')}} else (CHECKVOUCHS.cCVReason) end AS INVTY_DIFF_RESN_LKEY,
case when length(trim(CHECKVOUCHS.iSoType::VARCHAR))<1 then {{var('default_mapkey')}} when CHECKVOUCHS.iSoType::VARCHAR IS NULL then  {{var('default_mapkey')}} else (CHECKVOUCHS.iSoType::VARCHAR) end AS SLS_ORD_TYP_LKEY,
case when length(trim(CHECKVOUCHS.iExpiratDateCalcu))<1 then {{var('default_mapkey')}} when CHECKVOUCHS.iExpiratDateCalcu IS NULL then  {{var('default_mapkey')}} else (CHECKVOUCHS.iExpiratDateCalcu) end AS VALID_PERD_CALC_MTHD_LKEY,
case when length(trim(CHECKVOUCHS.cInvCode))<1 then {{var('default_mapkey')}} when CHECKVOUCHS.cInvCode IS NULL then  {{var('default_mapkey')}} else (CHECKVOUCHS.cInvCode) end AS INVTY_PROD_KEY,
CHECKVOUCHS.cCVCode as INVTY_ORD_NBR,
CHECKVOUCHS.iCVNum as ON_BOOK_AUXILIARY_MEAS_QTY,
CHECKVOUCHS.iCVQuantity as PRIM_UOM_QTY,
CHECKVOUCHS.iCVCNum as AUXILIARY_MEAS_INVTY_QTY,
CHECKVOUCHS.iJhdj as PROD_UNIT_PRC_AMT,
CHECKVOUCHS.iJhJe as BOOK_VAL_AMT,
CHECKVOUCHS.iSjDJ as ACT_PROD_UNIT_PRC,
CHECKVOUCHS.iSjJe as ACT_AMT,
CHECKVOUCHS.autoID as INVTY_LIST_ID,
CHECKVOUCHS.ID as INVTY_LIST_MAIN_TBL_ID,
CHECKVOUCHS.iAdInQuantity as IBND_STORG_ADJ_QTY,
CHECKVOUCHS.iAdInNum as AUXILIARY_MEAS_ADJUST_AMT,
CHECKVOUCHS.iAdOutQuantity as OBND_ADJ_QTY,
CHECKVOUCHS.iAdOutNum as OBND_AUXILIARY_MEAS_ADJ_QTY,
CHECKVOUCHS.iActualWaste as ACT_LOSS_RATE,
CHECKVOUCHS.irowno as DOC_LN_1_NBR,
CHECKVOUCHS.cbsysbarcode as DOC_LN_BARCD_NBR,
CHECKVOUCHS.cbufts as CNT_DOC_TM
FROM {{source('UFIDA','CHECKVOUCHS')}} CHECKVOUCHS